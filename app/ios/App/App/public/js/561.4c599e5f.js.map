{"version":3,"file":"js/561.4c599e5f.js","mappings":"mLACO,MAAMA,UAAqB,KAC9BC,cACIC,SAASC,WACTC,KAAKC,SAAW,KAChBD,KAAKE,aAAe,aAAcC,SACtC,CACAC,kBACSJ,KAAKE,cACNF,KAAKK,wBAELL,KAAKC,gBACCD,KAAKM,aAEfN,KAAKC,eAAiBE,UAAUF,SAASM,QAAQ,SACrD,CACAH,mBACI,IAAII,EACCR,KAAKE,cACNF,KAAKK,wBAEgB,QAAxBG,EAAKR,KAAKC,gBAA6B,IAAPO,GAAyBA,EAAGC,UAC7DT,KAAKC,SAAW,IACpB,CACAG,oBACI,MAAMM,EAAS,CACXC,YAAaX,KAAKE,cAEtB,OAAOQ,CACX,CACAL,wBACI,MAAML,KAAKY,YAAY,sDAC3B,E","sources":["webpack://sadiss_app/./node_modules/@capacitor-community/keep-awake/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\r\nexport class KeepAwakeWeb extends WebPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.wakeLock = null;\r\n        this._isSupported = 'wakeLock' in navigator;\r\n    }\r\n    async keepAwake() {\r\n        if (!this._isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        if (this.wakeLock) {\r\n            await this.allowSleep();\r\n        }\r\n        this.wakeLock = await navigator.wakeLock.request('screen');\r\n    }\r\n    async allowSleep() {\r\n        var _a;\r\n        if (!this._isSupported) {\r\n            this.throwUnsupportedError();\r\n        }\r\n        (_a = this.wakeLock) === null || _a === void 0 ? void 0 : _a.release();\r\n        this.wakeLock = null;\r\n    }\r\n    async isSupported() {\r\n        const result = {\r\n            isSupported: this._isSupported,\r\n        };\r\n        return result;\r\n    }\r\n    throwUnsupportedError() {\r\n        throw this.unavailable('Screen Wake Lock API not available in this browser.');\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map"],"names":["KeepAwakeWeb","constructor","super","arguments","this","wakeLock","_isSupported","navigator","async","throwUnsupportedError","allowSleep","request","_a","release","result","isSupported","unavailable"],"sourceRoot":""}